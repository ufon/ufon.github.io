{"version":3,"sources":["utils/localStorage.js","utils/apolloClient.js","utils/withAuth.js","components/SortableList/index.js","utils/notifications.js","components/AddPollForm/index.js","containers/Dashboard/Polls/NewPoll/index.js","containers/Dashboard/Polls/EditPoll/index.js","containers/Dashboard/Polls/AllPolls/index.js","containers/Dashboard/Polls/index.js","containers/Dashboard/Settings/index.js","containers/Dashboard/Groups/index.js","components/Link/index.js","components/Menus/Admin/index.js","containers/Dashboard/index.js","containers/Auth/Login/index.js","containers/Auth/Callback/index.js","containers/Auth/index.js","components/BarChart/index.js","containers/Poll/index.js","containers/Group/index.js","containers/NotFound/index.js","components/UserWithAvatar/index.js","components/Menus/Main/index.js","components/Header/index.js","components/Footer/index.js","containers/App/index.js","global-styles.js","index.js"],"names":["utils_localStorage","write","token","localStorage","setItem","read","getItem","delete","removeItem","GRAPHQL_URL","concat","process","client","ApolloClient","uri","request","operation","headers","authorization","setContext","PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","sessionStorage","location","pathname","react_default","a","createElement","Route","assign","render","props","Redirect","to","state","from","RadioGroup","Radio","Group","ListWrapper","styled","div","_templateObject","height","ListItem","_templateObject2","clamp","n","min","max","Math","SortableList","mouseY","topDeltaY","isPressed","originalPosOfLastPressed","handleTouchStart","key","pressLocation","e","_this","handleMouseDown","touches","handleTouchMove","preventDefault","handleMouseMove","handleMouseUp","setState","pos","pressY","pageY","_ref2","_this$state","order","currentRow","round","length","newOrder","indexOf","arr","_arr","slice","val","splice","reinsert","onOrderChange","window","addEventListener","this","_this2","_this$state2","_this$props","options","react","es_button","onClick","onAddOption","type","icon","onChange","onAnswerChange","value","answer","map","option","active","id","style","scale","shadow","y","web","immediate","name","_ref3","onMouseDown","bind","onTouchStart","boxShadow","transform","zIndex","es_radio","input","onOptionValueChange","target","placeholder","size","margin","onOptionDelete","React","notifications","message","description","notification","AddPollForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addOption","nanoid","toConsumableArray","deleteOption","filter","optionID","handleOrderChange","handleOptionValueChange","index","findIndex","handleAnswerChange","console","log","published","question","onSave","isUpdate","marginBottom","popover","content","trigger","es_switch","defaultChecked","SortableList_SortableList","asyncToGenerator","regenerator_default","mark","_callee","poll","wrap","_context","prev","next","variables","defineProperty","objectSpread","sent","data","notify","t0","stop","ADD_POLL","gql","NewPoll_templateObject","NewPoll","react_apollo_browser_umd","mutation","addPoll","components_AddPollForm","UPDATE_POLL","EditPoll_templateObject","GET_POLL_BY_ID","EditPoll_templateObject2","EditPoll","query","match","params","pollInterval","loading","error","updatePoll","GET_POLLS","AllPolls_templateObject","PUBLISH_POLL","AllPolls_templateObject2","AllPolls","user","groups","group","polls","Fragment","row","gutter","col","lg","md","card","actions","disabled","history","push","publishPoll","_ref4","_callee2","_context2","withRouter","PollsPage","Switch","exact","path","Polls","SettingsPage","GET_GROUP_BY_ID","Groups_templateObject","GET_GROUPS","Groups_templateObject2","ADD_GROUP","_templateObject3","PUBLISH_GROUP","_templateObject4","ADD_POLL_TO_GROUP","_templateObject5","DELETE_POLL_FROM_GROUP","_templateObject6","NewGroup","visible","groupId","showModal","handleOk","handleCancel","createGroup","publishGroup","_ref5","modal","title","onOk","delPollFromGroup","_ref7","addPollToGroup","_ref8","_ref9","Groups_AddPollToGroup","_ref10","groupPolls","AddPollToGroup","selectedId","_this4","display","es_select","width","Option","_callee3","_ref12","_context3","addPollInput","pollId","tag","closable","onClose","_callee4","_context4","removePollInput","Link","parser","document","href","toLocation","parseTo","hostname","children","isInternal","es_Link","rel","menu","mode","selectedKeys","item","Item","Link_Link","Content","Layout","Sider","ADMIN_MENU","DashboardContainer","padding","layout","background","Admin","minHeight","Groups","Settings","LoginPage","justify","xs","CallbackPage","opener","postMessage","focus","close","err","AuthContainer","Login","Callback","COLORS","DATA","SimpleBarChart","getPath","x","TriangleBar","fill","d","stroke","BarChart","top","right","left","bottom","XAxis","dataKey","YAxis","CartesianGrid","strokeDasharray","Bar","shape","label","position","entry","Cell","Poll_templateObject","SEND_VOTE","Poll_templateObject2","StyledRadioGroup","Poll_templateObject3","PollPage","answerID","voted","optionId","justifyContent","alignItems","author","profile","Vote","vote","voteInput","components_BarChart","votes","Group_templateObject","Group_templateObject2","Group_templateObject3","StyledCarousel","Carousel","Group_templateObject4","Poll","Group_StyledRadioGroup","GroupPage","Group_Poll","NotFound","Container","UserWithAvatar_templateObject","Name","UserWithAvatar_templateObject2","UserName","UserWithAvatar_templateObject3","UserMenu","UserWithAvatar_templateObject4","UserWithAvatar","avatar","fullName","userName","onLogout","onMyPolls","es_avatar","src","_ref$user","onLoginClick","onLogoutClick","theme","lineHeight","marginLeft","components_UserWithAvatar","github_username","MAIN_MENU","GET_PROFILE","Header_templateObject","Header","listener","origin","isAuthenticated","redirect","openPopup","url","screen","w","h","open","Main","Footer","textAlign","marginTop","App","BrowserRouter","apolloClient","components_Header","withAuth","Dashboard","Auth","components_Footer","createGlobalStyle","global_styles_templateObject","ReactDOM","containers_App","global_styles","getElementById"],"mappings":"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","file":"static/js/main.19319fcd.chunk.js","sourcesContent":["const storageKey = \"jwt\";\r\n\r\nexport default {\r\n  write: token => localStorage.setItem(storageKey, token),\r\n  read: () => localStorage.getItem(storageKey),\r\n  delete: () => localStorage.removeItem(storageKey)\r\n};\r\n","import ApolloClient from \"apollo-boost\";\r\nimport localStorage from \"./localStorage\";\r\n\r\nconst GRAPHQL_URL = `${process.env.REACT_APP_GRAPHQL_URL}/api/graphql`;\r\n\r\nconst client = new ApolloClient({\r\n  uri: GRAPHQL_URL,\r\n  request: operation => {\r\n    const token = localStorage.read();\r\n    let headers = {};\r\n    if (token) {\r\n      headers = { authorization: `Bearer ${token}` };\r\n    }\r\n    operation.setContext({ headers });\r\n  }\r\n});\r\n\r\nexport default client;\r\n","import React from \"react\";\r\n\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nimport localStorage from \"./localStorage\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  sessionStorage.setItem(\"auth:redirect\", rest.location.pathname);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        !!localStorage.read() ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/signin\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","// Forked from: https://github.com/chenglou/react-motion/tree/master/demos/demo8-draggable-list\r\n// Original: http://framerjs.com/examples/preview/#list-sorting.framer\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { Spring } from \"react-spring\";\r\nimport { Input, Icon, Radio } from \"antd\";\r\nimport { Button } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nconst ListWrapper = styled.div`\r\n  height: ${props => (props.height ? `${props.height}px` : \"auto\")};\r\n  transition: height 300ms ease-in-out;\r\n`;\r\n\r\nconst ListItem = styled.div`\r\n  position: absolute;\r\n  overflow: visible;\r\n  pointer-events: auto;\r\n  transform-origin: 50% 50% 0px;\r\n  border-radius: 4px;\r\n  color: rgb(153, 153, 153);\r\n  background-color: rgb(255, 255, 255);\r\n  box-sizing: border-box;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 40px;\r\n`;\r\n\r\nconst clamp = (n, min, max) => Math.max(Math.min(n, max), min);\r\n\r\nfunction reinsert(arr, from, to) {\r\n  const _arr = arr.slice(0);\r\n  const val = _arr[from];\r\n  _arr.splice(from, 1);\r\n  _arr.splice(to, 0, val);\r\n  return _arr;\r\n}\r\n\r\nexport default class SortableList extends React.Component {\r\n  state = {\r\n    mouseY: 0,\r\n    topDeltaY: 0,\r\n    isPressed: false,\r\n    originalPosOfLastPressed: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"touchmove\", this.handleTouchMove);\r\n    window.addEventListener(\"touchend\", this.handleMouseUp);\r\n    window.addEventListener(\"mousemove\", this.handleMouseMove);\r\n    window.addEventListener(\"mouseup\", this.handleMouseUp);\r\n  }\r\n\r\n  handleTouchStart = (key, pressLocation, e) =>\r\n    this.handleMouseDown(key, pressLocation, e.touches[0]);\r\n\r\n  handleTouchMove = e =>\r\n    e.preventDefault() || this.handleMouseMove(e.touches[0]);\r\n\r\n  handleMouseUp = () => this.setState({ isPressed: false, topDeltaY: 0 });\r\n\r\n  handleMouseDown = (pos, pressY, { pageY }) =>\r\n    this.setState({\r\n      topDeltaY: pageY - pressY,\r\n      mouseY: pressY,\r\n      isPressed: true,\r\n      originalPosOfLastPressed: pos\r\n    });\r\n\r\n  handleMouseMove = ({ pageY }) => {\r\n    const { isPressed, topDeltaY, originalPosOfLastPressed } = this.state;\r\n    const { order } = this.props;\r\n    if (isPressed) {\r\n      const mouseY = pageY - topDeltaY;\r\n      const currentRow = clamp(Math.round(mouseY / 100), 0, order.length - 1);\r\n      let newOrder = order;\r\n      if (currentRow !== order.indexOf(originalPosOfLastPressed))\r\n        newOrder = reinsert(\r\n          order,\r\n          order.indexOf(originalPosOfLastPressed),\r\n          currentRow\r\n        );\r\n      this.setState({ mouseY: mouseY });\r\n      this.props.onOrderChange(newOrder);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { mouseY, isPressed, originalPosOfLastPressed } = this.state;\r\n    const { options, order } = this.props;\r\n    return (\r\n      <Fragment>\r\n        {order.length < 5 && (\r\n          <Button\r\n            onClick={() => {\r\n              this.props.onAddOption();\r\n            }}\r\n            type=\"primary\"\r\n          >\r\n            Add option\r\n            <Icon type=\"plus\" />\r\n          </Button>\r\n        )}\r\n        <ListWrapper height={order.length * 100}>\r\n          <RadioGroup\r\n            onChange={this.props.onAnswerChange}\r\n            value={this.props.answer}\r\n          >\r\n            {options.map(option => {\r\n              const active =\r\n                originalPosOfLastPressed === option.id && isPressed;\r\n              const style = active\r\n                ? { scale: 1.1, shadow: 16, y: mouseY }\r\n                : { scale: 1, shadow: 1, y: order.indexOf(option.id) * 100 };\r\n              return (\r\n                <Spring\r\n                  immediate={name => active && name === \"y\"}\r\n                  to={style}\r\n                  key={option.id}\r\n                >\r\n                  {({ scale, shadow, y }) => (\r\n                    <ListItem\r\n                      onMouseDown={this.handleMouseDown.bind(\r\n                        null,\r\n                        option.id,\r\n                        y\r\n                      )}\r\n                      onTouchStart={this.handleTouchStart.bind(\r\n                        null,\r\n                        option.id,\r\n                        y\r\n                      )}\r\n                      style={{\r\n                        boxShadow: `rgba(0, 0, 0, 0.2) 0px ${shadow}px ${2 *\r\n                          shadow}px 0px`,\r\n                        transform: `translate3d(0, ${y}px, 0) scale(${scale})`,\r\n                        zIndex:\r\n                          option.id === originalPosOfLastPressed\r\n                            ? 99\r\n                            : option.id\r\n                      }}\r\n                    >\r\n                      <Radio value={option.id} />\r\n\r\n                      <Input\r\n                        onChange={e =>\r\n                          this.props.onOptionValueChange(\r\n                            option.id,\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        value={option.value}\r\n                        placeholder={`Enter poll option here`}\r\n                        size=\"large\"\r\n                      />\r\n                      <Button\r\n                        type=\"primary\"\r\n                        style={{ margin: \"0 10px\" }}\r\n                        onClick={() => {\r\n                          this.props.onOptionDelete(option.id);\r\n                        }}\r\n                        size=\"small\"\r\n                      >\r\n                        <Icon type=\"close\" />\r\n                      </Button>\r\n                    </ListItem>\r\n                  )}\r\n                </Spring>\r\n              );\r\n            })}\r\n          </RadioGroup>\r\n        </ListWrapper>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import { notification } from \"antd\";\r\n\r\nexport default (type, message, description) => {\r\n  notification[type]({\r\n    message: message,\r\n    description: description\r\n  });\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport SortableList from \"components/SortableList\";\r\nimport notify from \"utils/notifications\";\r\nimport nanoid from \"nanoid\";\r\nimport { Button, Input, Popover, Switch } from \"antd\";\r\n\r\nclass AddPollForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    this.state = {\r\n      published: this.props.published || false,\r\n      order: this.props.order || [],\r\n      answer: \"\",\r\n      question: this.props.question || \"\",\r\n      options: this.props.options || []\r\n    };\r\n  }\r\n\r\n  addOption = () => {\r\n    const id = `option_${nanoid()}`;\r\n    this.setState({\r\n      order: [...this.state.order, id],\r\n      options: [...this.state.options, { id, value: \"\" }]\r\n    });\r\n  };\r\n\r\n  deleteOption = id =>\r\n    this.setState({\r\n      order: this.state.order.filter(optionID => optionID !== id),\r\n      options: this.state.options.filter(({ id: optionID }) => optionID !== id)\r\n    });\r\n\r\n  handleOrderChange = order => {\r\n    this.setState({\r\n      order\r\n    });\r\n  };\r\n\r\n  handleOptionValueChange = (id, value) => {\r\n    const index = this.state.options.findIndex(option => option.id === id);\r\n    const options = this.state.options;\r\n    options[index].value = value;\r\n    this.setState({\r\n      options\r\n    });\r\n  };\r\n\r\n  handleAnswerChange = e => {\r\n    this.setState({\r\n      answer: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { options, answer, question, order, published } = this.state;\r\n    const { onSave, isUpdate, id } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Input\r\n          placeholder=\"Poll question\"\r\n          onChange={e => {\r\n            this.setState({ question: e.target.value });\r\n          }}\r\n          value={question}\r\n          style={{ marginBottom: \"20px\" }}\r\n        />\r\n        <Popover content=\"Publish poll after creating?\" trigger=\"hover\">\r\n          <Switch\r\n            defaultChecked={published}\r\n            onChange={published => this.setState({ published })}\r\n            style={{ marginBottom: \"20px\" }}\r\n          />\r\n        </Popover>\r\n        <p>Please, choose the correct answer by radio button.</p>\r\n        <SortableList\r\n          options={options}\r\n          order={order}\r\n          answer={answer}\r\n          onOptionDelete={this.deleteOption}\r\n          onOrderChange={this.handleOrderChange}\r\n          onAnswerChange={this.handleAnswerChange}\r\n          onAddOption={this.addOption}\r\n          onOptionValueChange={this.handleOptionValueChange}\r\n        />\r\n        <Button\r\n          onClick={async () => {\r\n            try {\r\n              const { data: poll } = await onSave({\r\n                variables: {\r\n                  [isUpdate ? \"updatePollInput\" : \"createPollInput\"]: {\r\n                    ...(isUpdate && { id }),\r\n                    question,\r\n                    options: options.map(e => ({ value: e.value }))\r\n                  }\r\n                }\r\n              });\r\n              notify(\"success\", \"Poll was successfully created!\", \"\");\r\n              console.log(poll);\r\n            } catch (e) {\r\n              console.log(e.message);\r\n              notify(\"error\", \"Bad request 500\", e.message);\r\n            }\r\n          }}\r\n          style={{ margin: \"20px 0\" }}\r\n        >\r\n          Save poll!\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPollForm;\r\n","import React, { Component } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport AddPollForm from \"components/AddPollForm\";\r\n\r\nconst ADD_POLL = gql`\r\n  mutation CreatePoll($createPollInput: CreatePollInput!) {\r\n    createPoll(createPollInput: $createPollInput) {\r\n      id\r\n      options {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass NewPoll extends Component {\r\n  render() {\r\n    return (\r\n      <Mutation mutation={ADD_POLL}>\r\n        {addPoll => <AddPollForm onSave={addPoll} />}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewPoll;\r\n","import React, { Component } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation, Query } from \"react-apollo\";\r\nimport AddPollForm from \"components/AddPollForm\";\r\n\r\nconst UPDATE_POLL = gql`\r\n  mutation UpdatePoll($updatePollInput: UpdatePollInput!) {\r\n    updatePoll(updatePollInput: $updatePollInput) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_POLL_BY_ID = gql`\r\n  query getPoll($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      answer\r\n      published\r\n      question\r\n      options {\r\n        id\r\n        value\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass EditPoll extends Component {\r\n  render() {\r\n    return (\r\n      <Query\r\n        query={GET_POLL_BY_ID}\r\n        variables={{ id: this.props.match.params.id }}\r\n        pollInterval={1500}\r\n      >\r\n        {({ loading, error, data }) => {\r\n          if (loading) return \"Loading...\";\r\n          if (error) return `Error! ${error.message}`;\r\n          if (data.poll.published) return \"Poll is published!\";\r\n          return (\r\n            <Mutation mutation={UPDATE_POLL}>\r\n              {(updatePoll, { loading, error }) => (\r\n                <AddPollForm\r\n                  isUpdate\r\n                  id={this.props.match.params.id}\r\n                  published={data.poll.published}\r\n                  order={data.poll.options.map(({ id }) => id)}\r\n                  question={data.poll.question}\r\n                  options={[...data.poll.options]}\r\n                  onSave={updatePoll}\r\n                />\r\n              )}\r\n            </Mutation>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditPoll;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport { Card, Col, Row, Icon, Switch, Popover, Button } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport notify from \"utils/notifications\";\r\nimport { Mutation } from \"react-apollo\";\r\n\r\nconst GET_POLLS = gql`\r\n  {\r\n    user {\r\n      id\r\n      polls {\r\n        id\r\n        answer\r\n        question\r\n        published\r\n      }\r\n      groups {\r\n        id\r\n        name\r\n        polls {\r\n          id\r\n          answer\r\n          question\r\n          published\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PUBLISH_POLL = gql`\r\n  mutation Publish($id: String!) {\r\n    publishPoll(id: $id)\r\n  }\r\n`;\r\nclass AllPolls extends Component {\r\n  render() {\r\n    return (\r\n      <Query query={GET_POLLS} pollInterval={1500}>\r\n        {({ loading, error, data }) => {\r\n          if (loading) return \"Loading...\";\r\n          if (error) return `Error! ${error.message}`;\r\n          return (\r\n            <Fragment>\r\n              {data.user &&\r\n                data.user.groups.map(\r\n                  group =>\r\n                    group.polls.length > 0 && (\r\n                      <>\r\n                        <h2>{group.name}</h2>\r\n\r\n                        <Row gutter={16}>\r\n                          {group.polls.map(poll => (\r\n                            <Col key={poll.id} lg={8} md={12}>\r\n                              <Card\r\n                                style={{ marginBottom: \"20px\" }}\r\n                                actions={[\r\n                                  <Popover content=\"Edit poll\" trigger=\"hover\">\r\n                                    <Button\r\n                                      disabled={poll.published}\r\n                                      icon=\"edit\"\r\n                                      onClick={() =>\r\n                                        this.props.history.push(\r\n                                          `/admin/poll/${poll.id}`\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                  </Popover>,\r\n                                  <Popover\r\n                                    content=\"Go to poll page\"\r\n                                    trigger=\"hover\"\r\n                                  >\r\n                                    <Button\r\n                                      icon=\"eye\"\r\n                                      onClick={() =>\r\n                                        this.props.history.push(\r\n                                          `/group/${group.id}`\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                  </Popover>,\r\n                                  <Popover\r\n                                    content=\"Publish poll\"\r\n                                    trigger=\"hover\"\r\n                                  >\r\n                                    <Mutation mutation={PUBLISH_POLL}>\r\n                                      {(publishPoll, { loading, error }) => (\r\n                                        <Switch\r\n                                          loading={loading}\r\n                                          disabled={poll.published}\r\n                                          defaultChecked={poll.published}\r\n                                          onChange={async () => {\r\n                                            try {\r\n                                              await publishPoll({\r\n                                                variables: {\r\n                                                  id: poll.id\r\n                                                }\r\n                                              });\r\n                                              notify(\r\n                                                \"success\",\r\n                                                \"Poll was successfully published!\",\r\n                                                \"\"\r\n                                              );\r\n                                            } catch (e) {\r\n                                              console.log(e.message);\r\n                                              notify(\r\n                                                \"error\",\r\n                                                \"Bad request 500\",\r\n                                                e.message\r\n                                              );\r\n                                            }\r\n                                          }}\r\n                                        />\r\n                                      )}\r\n                                    </Mutation>\r\n                                  </Popover>\r\n                                ]}\r\n                              >\r\n                                <h4>{poll.question}</h4>\r\n                              </Card>\r\n                            </Col>\r\n                          ))}\r\n                        </Row>\r\n                      </>\r\n                    )\r\n                )}\r\n              <Row type=\"flex\" gutter={16}>\r\n                {data.user &&\r\n                  data.user.polls.map(poll => (\r\n                    <Col key={poll.id} lg={8} md={12}>\r\n                      <Card\r\n                        style={{ marginBottom: \"20px\" }}\r\n                        actions={[\r\n                          <Popover content=\"Edit poll\" trigger=\"hover\">\r\n                            <Button\r\n                              disabled={poll.published}\r\n                              icon=\"edit\"\r\n                              onClick={() =>\r\n                                this.props.history.push(\r\n                                  `/admin/poll/${poll.id}`\r\n                                )\r\n                              }\r\n                            />\r\n                          </Popover>,\r\n                          <Popover content=\"Go to poll page\" trigger=\"hover\">\r\n                            <Button\r\n                              icon=\"eye\"\r\n                              onClick={() =>\r\n                                this.props.history.push(`/poll/${poll.id}`)\r\n                              }\r\n                            />\r\n                          </Popover>,\r\n                          <Popover content=\"Publish poll\" trigger=\"hover\">\r\n                            <Mutation mutation={PUBLISH_POLL}>\r\n                              {(publishPoll, { loading, error }) => (\r\n                                <Switch\r\n                                  loading={loading}\r\n                                  disabled={poll.published}\r\n                                  defaultChecked={poll.published}\r\n                                  onChange={async () => {\r\n                                    try {\r\n                                      await publishPoll({\r\n                                        variables: {\r\n                                          id: poll.id\r\n                                        }\r\n                                      });\r\n                                      notify(\r\n                                        \"success\",\r\n                                        \"Poll was successfully published!\",\r\n                                        \"\"\r\n                                      );\r\n                                    } catch (e) {\r\n                                      console.log(e.message);\r\n                                      notify(\r\n                                        \"error\",\r\n                                        \"Bad request 500\",\r\n                                        e.message\r\n                                      );\r\n                                    }\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </Mutation>\r\n                          </Popover>\r\n                        ]}\r\n                      >\r\n                        <h4>{poll.question}</h4>\r\n                      </Card>\r\n                    </Col>\r\n                  ))}\r\n              </Row>\r\n            </Fragment>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AllPolls);\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport NewPoll from \"./NewPoll\";\r\nimport EditPoll from \"./EditPoll\";\r\nimport Polls from \"./AllPolls\";\r\n\r\nconst PollsPage = ({ match }) => (\r\n  <Fragment>\r\n    <Switch>\r\n      <Route exact path={`${match.path}/all`} component={Polls} />\r\n      <Route exact path={`${match.path}/new`} component={NewPoll} />\r\n      <Route path={`${match.path}/:id`} component={EditPoll} />\r\n    </Switch>\r\n  </Fragment>\r\n);\r\n\r\nexport default PollsPage;\r\n","import React from 'react';\r\n\r\nconst SettingsPage = () => <p>Settings page</p>;\r\n\r\nexport default SettingsPage;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport notify from \"utils/notifications\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Popover,\r\n  Switch,\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Modal,\r\n  Tag,\r\n  Select\r\n} from \"antd\";\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation, Query } from \"react-apollo\";\r\n\r\nconst GET_GROUP_BY_ID = gql`\r\n  query getGroup($id: ID!) {\r\n    group(id: $id) {\r\n      id\r\n      name\r\n      polls {\r\n        id\r\n        answer\r\n        question\r\n        options {\r\n          id\r\n          value\r\n          votes\r\n        }\r\n      }\r\n    }\r\n    user {\r\n      id\r\n      polls {\r\n        id\r\n        answer\r\n        question\r\n        published\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_GROUPS = gql`\r\n  {\r\n    user {\r\n      id\r\n      groups {\r\n        id\r\n        name\r\n        published\r\n        polls {\r\n          question\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ADD_GROUP = gql`\r\n  mutation CreateGroup($name: String!) {\r\n    createGroup(name: $name) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst PUBLISH_GROUP = gql`\r\n  mutation Publish($id: String!) {\r\n    publishGroup(id: $id)\r\n  }\r\n`;\r\n\r\nconst ADD_POLL_TO_GROUP = gql`\r\n  mutation AddPollToGroup($addPollInput: AddPollInput!) {\r\n    addPollToGroup(addPollInput: $addPollInput)\r\n  }\r\n`;\r\n\r\nconst DELETE_POLL_FROM_GROUP = gql`\r\n  mutation RemovePollFromGroup($removePollInput: RemovePollInput!) {\r\n    removePollFromGroup(removePollInput: $removePollInput)\r\n  }\r\n`;\r\n\r\nclass NewGroup extends Component {\r\n  state = {\r\n    name: \"\",\r\n    visible: false,\r\n    groupId: \"\"\r\n  };\r\n\r\n  showModal = groupId => {\r\n    this.setState({\r\n      visible: true,\r\n      groupId\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name } = this.state;\r\n    console.log(this.state.groupId);\r\n    return (\r\n      <>\r\n        <Input\r\n          placeholder=\"Group name\"\r\n          onChange={e => {\r\n            this.setState({ name: e.target.value });\r\n          }}\r\n        />\r\n        <Mutation mutation={ADD_GROUP}>\r\n          {(createGroup, { loading, error }) => (\r\n            <Button\r\n              loading={loading}\r\n              onClick={async () => {\r\n                try {\r\n                  const { data: group } = await createGroup({\r\n                    variables: {\r\n                      name\r\n                    }\r\n                  });\r\n                  notify(\"success\", \"Group was successfully created!\", \"\");\r\n                  console.log(group);\r\n                } catch (e) {\r\n                  console.log(e.message);\r\n                  notify(\"error\", \"Bad request 500\", e.message);\r\n                }\r\n              }}\r\n              style={{ margin: \"20px 0\" }}\r\n            >\r\n              Create group!\r\n            </Button>\r\n          )}\r\n        </Mutation>\r\n\r\n        <Row gutter={16}>\r\n          <Query query={GET_GROUPS}>\r\n            {({ loading, error, data }) => {\r\n              if (loading) return \"Loading...\";\r\n              if (error) return `Error! ${error.message}`;\r\n\r\n              return (\r\n                data.user &&\r\n                data.user.groups.map(group => (\r\n                  <Col key={group.id} lg={8} md={12}>\r\n                    <Card\r\n                      style={{ marginBottom: \"20px\" }}\r\n                      actions={[\r\n                        <Popover content=\"Publish group\" trigger=\"hover\">\r\n                          <Mutation mutation={PUBLISH_GROUP}>\r\n                            {(publishGroup, { loading, error }) => (\r\n                              <Switch\r\n                                loading={loading}\r\n                                disabled={group.published}\r\n                                defaultChecked={group.published}\r\n                                onChange={async () => {\r\n                                  try {\r\n                                    await publishGroup({\r\n                                      variables: {\r\n                                        id: group.id\r\n                                      }\r\n                                    });\r\n                                    notify(\r\n                                      \"success\",\r\n                                      \"Group was successfully published!\",\r\n                                      \"\"\r\n                                    );\r\n                                  } catch (e) {\r\n                                    console.log(e.message);\r\n                                    notify(\r\n                                      \"error\",\r\n                                      \"Bad request 500\",\r\n                                      e.message\r\n                                    );\r\n                                  }\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </Mutation>\r\n                        </Popover>,\r\n                        <Button\r\n                          disabled={group.published}\r\n                          type=\"primary\"\r\n                          onClick={() => this.showModal(group.id)}\r\n                        >\r\n                          Add poll\r\n                        </Button>\r\n                      ]}\r\n                    >\r\n                      <h4>{group.name}</h4>\r\n                    </Card>\r\n                  </Col>\r\n                ))\r\n              );\r\n            }}\r\n          </Query>\r\n          <Modal\r\n            title=\"Add To Group\"\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n          >\r\n            <Mutation mutation={DELETE_POLL_FROM_GROUP}>\r\n              {(delPollFromGroup, { loading, error }) => (\r\n                <Mutation mutation={ADD_POLL_TO_GROUP}>\r\n                  {(addPollToGroup, { loading, error }) => (\r\n                    <Query\r\n                      query={GET_GROUP_BY_ID}\r\n                      variables={{ id: this.state.groupId }}\r\n                    >\r\n                      {({ loading, error, data }) => {\r\n                        if (loading) return \"Loading...\";\r\n                        if (error) return `Error! ${error.message}`;\r\n                        return (\r\n                          data.user && (\r\n                            <AddPollToGroup\r\n                              polls={data.user.polls.filter(\r\n                                ({ published }) => published === false\r\n                              )}\r\n                              groupPolls={data.group.polls}\r\n                              groupId={data.group.id}\r\n                              addPollToGroup={addPollToGroup}\r\n                              delPollFromGroup={delPollFromGroup}\r\n                            />\r\n                          )\r\n                        );\r\n                      }}\r\n                    </Query>\r\n                  )}\r\n                </Mutation>\r\n              )}\r\n            </Mutation>\r\n          </Modal>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass AddPollToGroup extends Component {\r\n  state = {\r\n    selectedId: \"\"\r\n  };\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <>\r\n        <div style={{ display: \"flex\" }}>\r\n          <Select\r\n            placeholder=\"Add poll to group\"\r\n            style={{ width: \"100%\" }}\r\n            onChange={e => this.setState({ selectedId: e })}\r\n          >\r\n            {this.props.polls.map(poll => (\r\n              <Select.Option key={poll.id} value={poll.id}>\r\n                {poll.question} ({poll.id})\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n          <Button\r\n            onClick={async () => {\r\n              try {\r\n                const { data: poll } = await this.props.addPollToGroup({\r\n                  variables: {\r\n                    addPollInput: {\r\n                      groupId: this.props.groupId,\r\n                      pollId: this.state.selectedId\r\n                    }\r\n                  }\r\n                });\r\n                notify(\"success\", \"Poll was successfully added to Group!\", \"\");\r\n                console.log(poll);\r\n              } catch (e) {\r\n                console.log(e.message);\r\n                notify(\"error\", \"Bad request 500\", e.message);\r\n              }\r\n            }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n        {this.props.groupPolls.map(poll => (\r\n          <Tag\r\n            closable\r\n            key={poll.id}\r\n            onClose={async () => {\r\n              try {\r\n                await this.props.delPollFromGroup({\r\n                  variables: {\r\n                    removePollInput: {\r\n                      groupId: this.props.groupId,\r\n                      pollId: poll.id\r\n                    }\r\n                  }\r\n                });\r\n                notify(\r\n                  \"success\",\r\n                  \"Poll was successfully deleted from Group!\",\r\n                  \"\"\r\n                );\r\n                console.log(poll);\r\n              } catch (e) {\r\n                console.log(e.message);\r\n                notify(\"error\", \"Bad request 500\", e.message);\r\n              }\r\n            }}\r\n          >\r\n            {poll.question}\r\n          </Tag>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewGroup;\r\n","import React from \"react\";\r\nimport { Link as ReactLink } from \"react-router-dom\";\r\n\r\nexport default class Link extends React.Component {\r\n  parseTo(to) {\r\n    let parser = document.createElement(\"a\");\r\n    parser.href = to;\r\n    return parser;\r\n  }\r\n\r\n  isInternal(to) {\r\n    if (to.indexOf(\"://\") === -1) return true;\r\n\r\n    const toLocation = this.parseTo(to);\r\n    return window.location.hostname === toLocation.hostname;\r\n  }\r\n\r\n  render() {\r\n    const { to, children, ...rest } = this.props;\r\n    const isInternal = this.isInternal(to);\r\n\r\n    if (isInternal) {\r\n      return (\r\n        <ReactLink to={to} {...rest}>\r\n          {children}\r\n        </ReactLink>\r\n      );\r\n    } else {\r\n      return (\r\n        <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\r\n          {children}\r\n        </a>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Link from \"../../Link\";\r\nimport { Menu, Icon } from \"antd\";\r\n\r\nconst AdminMenu = ({ data, location }) => (\r\n  <Menu\r\n    mode=\"inline\"\r\n    selectedKeys={[location.pathname]}\r\n    style={{ height: \"100%\" }}\r\n  >\r\n    {data.map(item => (\r\n      <Menu.Item key={item.path}>\r\n        <Link to={item.path}>\r\n          {item.icon && <Icon type={item.icon} />}\r\n          <span>{item.name}</span>\r\n        </Link>\r\n      </Menu.Item>\r\n    ))}\r\n  </Menu>\r\n);\r\n\r\nexport default withRouter(AdminMenu);\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport Polls from \"./Polls\";\r\nimport Settings from \"./Settings\";\r\nimport Groups from \"./Groups\";\r\nimport AdminMenu from \"components/Menus/Admin\";\r\n\r\nconst { Content, Sider } = Layout;\r\n\r\nconst ADMIN_MENU = [\r\n  { id: 0, name: \"Add Poll\", icon: \"plus\", path: \"/admin/poll/new\" },\r\n  { id: 1, name: \"Groups\", icon: \"notification\", path: \"/admin/groups\" },\r\n  { id: 2, name: \"Polls\", icon: \"notification\", path: \"/admin/poll/all\" },\r\n  { id: 3, name: \"Settings\", icon: \"setting\", path: \"/admin/settings\" }\r\n];\r\n\r\nclass DashboardContainer extends React.Component {\r\n  render() {\r\n    const { match } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Content style={{ padding: \"0 50px\" }}>\r\n          <Layout style={{ padding: \"24px 0\", background: \"#fff\" }}>\r\n            <Sider width={200} style={{ background: \"#fff\" }}>\r\n              <AdminMenu data={ADMIN_MENU} />\r\n            </Sider>\r\n            <Content style={{ padding: \"0 24px\", minHeight: 280 }}>\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path={`${match.path}`}\r\n                  render={() => <Redirect to={`${match.path}/poll/all`} />}\r\n                />\r\n                <Route path={`${match.path}/poll`} component={Polls} />\r\n                <Route path={`${match.path}/groups`} component={Groups} />\r\n                <Route path={`${match.path}/settings`} component={Settings} />\r\n              </Switch>\r\n            </Content>\r\n          </Layout>\r\n        </Content>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardContainer;\r\n","import React from \"react\";\r\nimport { Row, Card, Col } from \"antd\";\r\n\r\nconst LoginPage = () => (\r\n  <Row type=\"flex\" style={{ margin: \"50px 0\" }} justify=\"center\">\r\n    <Col xs={24} md={12}>\r\n      <Card title=\"Sign in\">\r\n        <p>For using the system you should sign in.</p>\r\n      </Card>\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Card, Col } from \"antd\";\r\nclass CallbackPage extends Component {\r\n  state = {\r\n    error: false\r\n  };\r\n\r\n  componentWillMount() {\r\n    try {\r\n      const { token } = this.props.match.params;\r\n      window.opener.postMessage({ token }, process.env.REACT_APP_URL);\r\n      window.opener.focus();\r\n      window.close();\r\n    } catch (err) {\r\n      this.setState({ error: true });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Row type=\"flex\" style={{ margin: \"50px 0\" }} justify=\"center\">\r\n        <Col xs={24} md={12}>\r\n          <Card title=\"Callback\">\r\n            <h1>{this.state.error ? \"Error\" : \"Success\"}</h1>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CallbackPage;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport Callback from \"./Callback\";\r\n\r\nconst AuthContainer = ({ match }) => (\r\n  <Fragment>\r\n    <Switch>\r\n      <Route exact path={`${match.path}`} component={Login} />\r\n      <Route path={`${match.path}/:token`} component={Callback} />\r\n    </Switch>\r\n  </Fragment>\r\n);\r\n\r\nexport default AuthContainer;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  Cell\r\n} from \"recharts\";\r\n\r\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\r\n\r\nconst DATA = [\r\n  { name: \"Page A\", value: 2400 },\r\n  { name: \"Page B\", value: 1398 },\r\n  { name: \"Page C\", value: 9800 },\r\n  { name: \"Page D\", value: 3908 },\r\n  { name: \"Page E\", value: 4800 },\r\n  { name: \"Page F\", value: 3800 },\r\n  { name: \"Page G\", value: 4300 }\r\n];\r\n\r\nclass SimpleBarChart extends Component {\r\n  state = {\r\n    data: this.props.data || DATA\r\n  };\r\n\r\n  getPath = (x, y, width, height) => {\r\n    return `M${x},${y + height}\r\n            C${x + width / 3},${y + height} ${x + width / 2},${y +\r\n      height / 3} ${x + width / 2}, ${y}\r\n            C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y +\r\n      height} ${x + width}, ${y + height}\r\n            Z`;\r\n  };\r\n\r\n  TriangleBar = props => {\r\n    const { fill, x, y, width, height } = props;\r\n\r\n    return (\r\n      <path d={this.getPath(x, y, width, height)} stroke=\"none\" fill={fill} />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    return (\r\n      <BarChart\r\n        width={600}\r\n        height={300}\r\n        data={data}\r\n        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n      >\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Bar\r\n          dataKey=\"value\"\r\n          fill=\"#8884d8\"\r\n          shape={this.TriangleBar}\r\n          label={{ position: \"top\" }}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={COLORS[index % 20]} />\r\n          ))}\r\n        </Bar>\r\n      </BarChart>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleBarChart;\r\n","import React, { Component } from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport gql from \"graphql-tag\";\r\nimport { Query, Mutation } from \"react-apollo\";\r\nimport { Card, Col, Row, Radio, Button } from \"antd\";\r\nimport notify from \"utils/notifications\";\r\n\r\nimport styled from \"styled-components\";\r\nimport BarChart from \"components/BarChart\";\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nconst GET_POLL_BY_ID = gql`\r\n  query getPoll($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      answer\r\n      published\r\n      author {\r\n        profile {\r\n          name\r\n          avatar\r\n        }\r\n      }\r\n      question\r\n      options {\r\n        id\r\n        value\r\n        votes\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SEND_VOTE = gql`\r\n  mutation Vote($voteInput: VoteInput!) {\r\n    vote(voteInput: $voteInput)\r\n  }\r\n`;\r\n\r\nconst StyledRadioGroup = styled(RadioGroup)`\r\n  .ant-radio-wrapper {\r\n    display: block;\r\n    height: 30px;\r\n  }\r\n`;\r\n\r\nclass PollPage extends Component {\r\n  state = {\r\n    answerID: null,\r\n    voted: false\r\n  };\r\n\r\n  onAnswerChange = e => {\r\n    this.setState({\r\n      answerID: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { answerID: optionId, voted } = this.state;\r\n    console.log(voted);\r\n    return (\r\n      <Layout style={{ padding: \"0 50px\", background: \"#fff\" }}>\r\n        <Layout.Content\r\n          style={{\r\n            padding: \"24px 0\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <Query\r\n            query={GET_POLL_BY_ID}\r\n            variables={{ id: this.props.match.params.id }}\r\n            pollInterval={1500}\r\n          >\r\n            {({ loading, error, data }) => {\r\n              if (loading) return \"Loading...\";\r\n              if (error) return `Error! ${error.message}`;\r\n              if (!data.poll.published) return `Poll is not published :(`;\r\n              return (\r\n                <Row style={{ width: \"100%\" }} gutter={16}>\r\n                  <Col lg={12} md={24}>\r\n                    <h1>{data.poll.question}</h1>\r\n                    <p>{data.poll.author.profile.name}</p>\r\n                  </Col>\r\n                  <Col lg={12} md={24}>\r\n                    {!data.poll.answer || this.state.answerID ? (\r\n                      <Card>\r\n                        <StyledRadioGroup\r\n                          disabled={!!data.poll.answer}\r\n                          onChange={this.onAnswerChange}\r\n                          value={data.poll.answer || this.state.answerID}\r\n                        >\r\n                          {data.poll.options.map(option => (\r\n                            <Radio key={option.id} value={option.id}>\r\n                              {option.value}\r\n                            </Radio>\r\n                          ))}\r\n                        </StyledRadioGroup>\r\n                        <Mutation mutation={SEND_VOTE}>\r\n                          {(Vote, { loading, error }) => (\r\n                            <Button\r\n                              disabled={!!data.poll.answer}\r\n                              onClick={async () => {\r\n                                try {\r\n                                  const { data: vote } = await Vote({\r\n                                    variables: {\r\n                                      voteInput: {\r\n                                        optionId,\r\n                                        pollId: this.props.match.params.id\r\n                                      }\r\n                                    }\r\n                                  });\r\n                                  notify(\"success\", \"Voted successfully!\", \"\");\r\n                                  this.setState({ voted: true });\r\n                                  console.log(vote);\r\n                                } catch (e) {\r\n                                  console.log(e.message);\r\n                                  notify(\"error\", \"Bad request 500\", e.message);\r\n                                }\r\n                              }}\r\n                            >\r\n                              Vote\r\n                            </Button>\r\n                          )}\r\n                        </Mutation>\r\n                      </Card>\r\n                    ) : (\r\n                      <BarChart\r\n                        data={data.poll.options.map(({ votes, value }) => ({\r\n                          name: value,\r\n                          value: votes\r\n                        }))}\r\n                      />\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            }}\r\n          </Query>\r\n        </Layout.Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PollPage;\r\n","import React, { Component } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query, Mutation } from \"react-apollo\";\r\nimport { Card, Col, Row, Radio, Button, Layout, Carousel } from \"antd\";\r\nimport notify from \"utils/notifications\";\r\n\r\nimport styled from \"styled-components\";\r\nimport BarChart from \"components/BarChart\";\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nconst GET_GROUP_BY_ID = gql`\r\n  query getGroup($id: ID!) {\r\n    group(id: $id) {\r\n      name\r\n      polls {\r\n        id\r\n        answer\r\n\r\n        question\r\n        options {\r\n          id\r\n          value\r\n          votes\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SEND_VOTE = gql`\r\n  mutation Vote($voteInput: VoteInput!) {\r\n    vote(voteInput: $voteInput)\r\n  }\r\n`;\r\n\r\nconst StyledRadioGroup = styled(RadioGroup)`\r\n  .ant-radio-wrapper {\r\n    display: block;\r\n    height: 30px;\r\n  }\r\n`;\r\n\r\nconst StyledCarousel = styled(Carousel)`\r\n  background: #f3f4f7;\r\n  padding: 24px;\r\n  .slick-slide {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nclass Poll extends Component {\r\n  state = {\r\n    answerID: null,\r\n    voted: false\r\n  };\r\n\r\n  onAnswerChange = e => {\r\n    this.setState({\r\n      answerID: e.target.value\r\n    });\r\n  };\r\n  render() {\r\n    const { answerID: optionId } = this.state;\r\n    return (\r\n      <Row gutter={16}>\r\n        <Col lg={12} md={24}>\r\n          <h1>{this.props.poll.question}</h1>\r\n        </Col>\r\n        <Col lg={12} md={24}>\r\n          {!this.props.poll.answer || this.state.answerID ? (\r\n            <Card>\r\n              <StyledRadioGroup\r\n                disabled={!!this.props.poll.answer}\r\n                onChange={this.onAnswerChange}\r\n                value={this.props.poll.answer || this.state.answerID}\r\n              >\r\n                {this.props.poll.options.map(option => (\r\n                  <Radio key={option.id} value={option.id}>\r\n                    {option.value}\r\n                  </Radio>\r\n                ))}\r\n              </StyledRadioGroup>\r\n              <Mutation mutation={SEND_VOTE}>\r\n                {(Vote, { loading, error }) => (\r\n                  <Button\r\n                    disabled={!!this.props.poll.answer}\r\n                    onClick={async () => {\r\n                      try {\r\n                        const { data: vote } = await Vote({\r\n                          variables: {\r\n                            voteInput: {\r\n                              optionId,\r\n                              pollId: this.props.poll.id\r\n                            }\r\n                          }\r\n                        });\r\n                        notify(\"success\", \"Voted successfully!\", \"\");\r\n                        this.setState({ voted: true });\r\n                        console.log(vote);\r\n                      } catch (e) {\r\n                        console.log(e.message);\r\n                        notify(\"error\", \"Bad request 500\", e.message);\r\n                      }\r\n                    }}\r\n                  >\r\n                    Vote\r\n                  </Button>\r\n                )}\r\n              </Mutation>\r\n            </Card>\r\n          ) : (\r\n            <BarChart\r\n              data={this.props.poll.options.map(({ votes, value }) => ({\r\n                name: value,\r\n                value: votes\r\n              }))}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nclass GroupPage extends Component {\r\n  render() {\r\n    return (\r\n      <Layout style={{ padding: \"0 50px\", background: \"#fff\" }}>\r\n        <Layout.Content\r\n          style={{\r\n            padding: \"24px 0\"\r\n          }}\r\n        >\r\n          <Query\r\n            query={GET_GROUP_BY_ID}\r\n            variables={{ id: this.props.match.params.id }}\r\n            pollInterval={1500}\r\n          >\r\n            {({ loading, error, data }) => {\r\n              if (loading) return \"Loading...\";\r\n              if (error) return `Error! ${error.message}`;\r\n\r\n              return (\r\n                <StyledCarousel>\r\n                  {data.group.polls.map(poll => (\r\n                    <Poll poll={poll} />\r\n                  ))}\r\n                </StyledCarousel>\r\n              );\r\n            }}\r\n          </Query>\r\n        </Layout.Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GroupPage;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => <p>404 Not found</p>;\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Avatar } from \"antd\";\r\nimport { Popover, Button } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  height: 100%;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  padding-bottom: 10px;\r\n  padding-right: 15px;\r\n  line-height: 1;\r\n  color: white;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  color: rgba(255, 255, 255, 0.6);\r\n  line-height: 1;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst UserMenu = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-items: between;\r\n  width: 150px;\r\n  button {\r\n    margin: 5px 0;\r\n  }\r\n`;\r\n\r\nconst UserWithAvatar = ({\r\n  avatar,\r\n  fullName,\r\n  userName,\r\n  onLogout,\r\n  onMyPolls\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <Popover\r\n        content={\r\n          <UserMenu>\r\n            <Button onClick={onLogout}>Logout</Button>\r\n          </UserMenu>\r\n        }\r\n        trigger=\"click\"\r\n      >\r\n        <Name>{fullName}</Name>\r\n        <UserName>{userName}</UserName>\r\n      </Popover>\r\n      <Avatar size={36} src={avatar} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserWithAvatar;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Link from \"../../Link\";\r\nimport { Menu, Button, Icon } from \"antd\";\r\nimport UserWithAvatar from \"../../UserWithAvatar\";\r\n\r\nconst MainMenu = ({\r\n  data,\r\n  user = false,\r\n  location,\r\n  onLoginClick,\r\n  onLogoutClick\r\n}) => (\r\n  <Menu\r\n    theme=\"dark\"\r\n    mode=\"horizontal\"\r\n    selectedKeys={[location.pathname]}\r\n    style={{ lineHeight: \"64px\", display: \"flex\" }}\r\n  >\r\n    {data.map(item => (\r\n      <Menu.Item key={item.path}>\r\n        <Link to={item.path}>{item.name}</Link>\r\n      </Menu.Item>\r\n    ))}\r\n    <Menu.Item style={{ marginLeft: \"auto\" }}>\r\n      {!user && (\r\n        <Button onClick={onLoginClick} size=\"large\">\r\n          <Icon type=\"github\" />\r\n          Sign in with Github\r\n        </Button>\r\n      )}\r\n      {user && (\r\n        <UserWithAvatar\r\n          avatar={user.avatar}\r\n          fullName={user.name}\r\n          userName={user.github_username}\r\n          onLogout={onLogoutClick}\r\n        />\r\n      )}\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nexport default withRouter(MainMenu);\r\n","import { Layout } from \"antd\";\r\n\r\nimport MainMenu from \"../Menus/Main\";\r\n\r\nimport localStorage from \"../../utils/localStorage\";\r\n\r\nimport gql from \"graphql-tag\";\r\n\r\nimport React, { Component, Fragment } from \"react\";\r\n\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\n\r\nconst MAIN_MENU = [\r\n  { id: 0, name: \"About\", path: \"/about\" },\r\n  { id: 1, name: \"Github\", path: \"https://github.com\" }\r\n];\r\n\r\nconst GET_PROFILE = gql`\r\n  {\r\n    user {\r\n      id\r\n      email\r\n      profile {\r\n        name\r\n        github_username\r\n        avatar\r\n      }\r\n    }\r\n  }\r\n`;\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAuthenticated: !!localStorage.read()\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"message\", this.listener);\r\n  }\r\n\r\n  listener = ({ origin, data }) => {\r\n    if (origin !== process.env.REACT_APP_URL) return;\r\n    if (data.token) {\r\n      localStorage.write(data.token);\r\n      this.setState({ isAuthenticated: true });\r\n      let redirect = sessionStorage.getItem(\"auth:redirect\");\r\n      if (redirect) {\r\n        this.props.history.push(redirect);\r\n      } else {\r\n        this.props.history.push(\"/admin\");\r\n      }\r\n    }\r\n  };\r\n\r\n  openPopup = url => {\r\n    const w = 500;\r\n    const h = 600;\r\n    const left = window.screen.width / 2 - w / 2;\r\n    const top = window.screen.height / 2 - h / 2;\r\n\r\n    return window.open(\r\n      process.env.REACT_APP_GRAPHQL_URL + url,\r\n      \"\",\r\n      `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${top}, left=${left}`\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated } = this.state;\r\n    return (\r\n      <Layout.Header>\r\n        {isAuthenticated ? (\r\n          <Query query={GET_PROFILE}>\r\n            {({ loading, error, data }) => {\r\n              if (loading) return \"Loading...\";\r\n              if (error) {\r\n                this.setState({ isAuthenticated: false });\r\n                localStorage.delete();\r\n                return <Redirect to=\"/signin\" />;\r\n              }\r\n              return (\r\n                <Fragment>\r\n                  {data.user && (\r\n                    <MainMenu\r\n                      onLoginClick={() => this.openPopup(\"/auth/github\")}\r\n                      onLogoutClick={() => {\r\n                        this.setState({ isAuthenticated: false });\r\n                        localStorage.delete();\r\n                        this.props.history.push(\"/signin\");\r\n                      }}\r\n                      data={MAIN_MENU}\r\n                      user={data.user.profile}\r\n                    />\r\n                  )}\r\n                </Fragment>\r\n              );\r\n            }}\r\n          </Query>\r\n        ) : (\r\n          <MainMenu\r\n            onLoginClick={() => this.openPopup(\"/auth/github\")}\r\n            data={MAIN_MENU}\r\n          />\r\n        )}\r\n      </Layout.Header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nconst Footer = () => (\r\n  <Layout.Footer style={{ textAlign: \"center\", marginTop: \"auto\" }}>\r\n    © 2018 BSTU\r\n  </Layout.Footer>\r\n);\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\n\r\nimport apolloClient from \"utils/apolloClient\";\r\nimport PrivateRoute from \"utils/withAuth\";\r\n\r\nimport Dashboard from \"containers/Dashboard\";\r\nimport Auth from \"containers/Auth\";\r\nimport Poll from \"containers/Poll\";\r\nimport Group from \"containers/Group\";\r\n\r\nimport NotFound from \"../NotFound\";\r\n\r\nimport Header from \"components/Header\";\r\nimport Footer from \"components/Footer\";\r\n\r\nconst App = ({ match }) => (\r\n  <BrowserRouter>\r\n    <ApolloProvider client={apolloClient}>\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Header />\r\n        <Switch>\r\n          <PrivateRoute path=\"/admin\" component={Dashboard} />\r\n          <Route exact path={\"/\"} render={() => <Redirect to={\"/admin\"} />} />\r\n          <Route path=\"/signin\" component={Auth} />\r\n          <PrivateRoute path=\"/poll/:id\" component={Poll} />\r\n          <PrivateRoute path=\"/group/:id\" component={Group} />\r\n\r\n          <Route path=\"*\" component={NotFound} />\r\n        </Switch>\r\n        <Footer />\r\n      </Layout>\r\n    </ApolloProvider>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n  html,\r\n  body {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  body {\r\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  }\r\n  body.fontLoaded {\r\n    font-family: 'Basis Grotesque Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  }\r\n  /* p,\r\n  label {\r\n    font-family: 'Basis Grotesque Pro', Georgia, Times, 'Times New Roman', serif;\r\n    font-weight: 500;\r\n    line-height: 1.5em;\r\n  } */\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./containers/App\";\r\nimport \"antd/dist/antd.css\";\r\nimport GlobalStyle from \"./global-styles\";\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n    <GlobalStyle />\r\n  </React.Fragment>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}